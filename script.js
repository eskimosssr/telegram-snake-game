// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;
tg.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
tg.enableClosingConfirmation(); // –°–ø—Ä–æ—Å–∏–º –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const user = tg.initDataUnsafe.user;
if (user) {
    console.log("–ü—Ä–∏–≤–µ—Ç, " + user.first_name + "! üëã");
}

// –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');
const gridSize = 20;
const tileCount = canvas.width / gridSize;

let snake = [
    {x: 10, y: 10}
];
let food = {};
let dx = 0;
let dy = 0;
let score = 0;

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
function moveUp() { if (dy !== 1) { dx = 0; dy = -1; } }
function moveDown() { if (dy !== -1) { dx = 0; dy = 1; } }
function moveLeft() { if (dx !== 1) { dx = -1; dy = 0; } }
function moveRight() { if (dx !== -1) { dx = 1; dy = 0; } }

// –°–≤–∞–π–ø—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
let touchStartX = 0;
let touchStartY = 0;

canvas.addEventListener('touchstart', (e) => {
    touchStartX = e.touches[0].clientX;
    touchStartY = e.touches[0].clientY;
    e.preventDefault();
});

canvas.addEventListener('touchmove', (e) => {
    e.preventDefault();
});

canvas.addEventListener('touchend', (e) => {
    const touchEndX = e.changedTouches[0].clientX;
    const touchEndY = e.changedTouches[0].clientY;
    
    const diffX = touchEndX - touchStartX;
    const diffY = touchEndY - touchStartY;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–∞–π–ø–∞
    if (Math.abs(diffX) > Math.abs(diffY)) {
        // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø
        if (diffX > 0 && dx !== -1) { dx = 1; dy = 0; }  // –í–ø—Ä–∞–≤–æ
        else if (diffX < 0 && dx !== 1) { dx = -1; dy = 0; } // –í–ª–µ–≤–æ
    } else {
        // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø
        if (diffY > 0 && dy !== -1) { dx = 0; dy = 1; }  // –í–Ω–∏–∑
        else if (diffY < 0 && dy !== 1) { dx = 0; dy = -1; } // –í–≤–µ—Ä—Ö
    }
});

// –°–æ–∑–¥–∞–µ–º –µ–¥—É
function createFood() {
    food = {
        x: Math.floor(Math.random() * tileCount),
        y: Math.floor(Math.random() * tileCount)
    };
}

// –û—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function gameLoop() {
    // –î–≤–∏–≥–∞–µ–º –∑–º–µ–π–∫—É
    const head = {x: snake[0].x + dx, y: snake[0].y + dy};
    snake.unshift(head);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—ä–µ–ª–∞ –ª–∏ –µ–¥—É
    if (head.x === food.x && head.y === food.y) {
        score += 10;
        document.getElementById('score').textContent = score;
        createFood();
    } else {
        snake.pop();
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
    if (head.x < 0 || head.x >= tileCount || head.y < 0 || head.y >= tileCount || 
        snake.slice(1).some(segment => segment.x === head.x && segment.y === head.y)) {
        alert('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Å—á—ë—Ç: ' + score);
        restartGame();
        return;
    }

    // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∏–≥—Ä—É
    ctx.fillStyle = '#f0f0f0';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    // –†–∏—Å—É–µ–º –∑–º–µ–π–∫—É
    ctx.fillStyle = '#2481cc';
    snake.forEach(segment => {
        ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize - 2, gridSize - 2);
    });

    // –†–∏—Å—É–µ–º –µ–¥—É
    ctx.fillStyle = '#ff4444';
    ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize - 2, gridSize - 2);
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
document.addEventListener('keydown', (e) => {
    switch(e.key) {
        case 'ArrowUp': if (dy !== 1) { dx = 0; dy = -1; } break;
        case 'ArrowDown': if (dy !== -1) { dx = 0; dy = 1; } break;
        case 'ArrowLeft': if (dx !== 1) { dx = -1; dy = 0; } break;
        case 'ArrowRight': if (dx !== -1) { dx = 1; dy = 0; } break;
    }
});

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
function restartGame() {
    snake = [{x: 10, y: 10}];
    dx = 0;
    dy = 0;
    score = 0;
    document.getElementById('score').textContent = score;
    createFood();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
createFood();
setInterval(gameLoop, 150);
